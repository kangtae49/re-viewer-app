
html, body { margin: 0; padding: 0; width:100%; height: 100%; overflow: hidden; font-size: 0.9em; 'Fira Code', 'Nanum Gothic Coding', 'D2Coding', monospace; font-feature-settings: "liga" on;}
.main { display: flex; margin: 0; padding:0; width:100%; height: 100%;}
.left { display: flex; flex-direction: column; margin: 0; padding:0; z-index: 0; width: 100%; height: 100%; }
.right { display: flex; flex-direction: column; margin: 0; padding:0; width: 100%; height: 100%; background-color: white; z-index: 1; }
.left .top { display: flex; gap: 5px; width: 100%; margin:0; padding: 0; background-color: white;}
.left .top .link { padding: 2px; color: #f4a261; cursor: pointer;}
.left .top .link:hover { background-color: #bad0e4; }
.right .top { display: flex; flex-direction: column; width: 100%; padding: 3px 0 3px 0 ; margin:0;  }


.left .tree { width: 100%; height: 100%; padding-left: 3px; overflow-y: auto;}
.right .content { overflow: auto;}

.tree .items { padding: 0; margin: 0; width: 100%; height: 100%; box-sizing: border-box;}
.tree .items {border-left: 10px solid #dbe3ea; padding-left: 1px; }
.tree .item { padding: 0; margin: 0;}
.tree .item .label { padding: 0; margin: 0; display: inline; cursor: pointer;}
.tree .item i { cursor: pointer;}
.tree .item .label:hover { background-color: #badce4; font-weight: bold;}
.tree .item.selected>.label { background-color: #83c5d5; }
.fa-folder { color: #f4a261; margin-right: 5px;}
.fa-folder:hover { transform: scale(1.2); color: #bd623c; }
.fa-folder-open { color: #f4a261; margin-right: 5px;}
.fa-folder-open:hover { transform: scale(1.2); color: #bd623c; }
.fa-folder-plus { color: #f4a261; margin-right: 5px;}
.fa-folder-plus:hover { transform: scale(1.2); color: #bd623c; }
.fa-file { color: #2a9d8f; margin-right: 5px;}
.fa-file-code { color: #2a9d8f; margin-right: 5px;}




/*.content.view { display:flex; margin:0; padding: 0; width: 100%; height: 100%; }*/
.content.view-text { white-space: pre-wrap; width: 100%;}
.content.view-html { width: 100%; }
.content.view-img { display: flex; justify-content: center; align-items: center; }
.content.view-img img { max-width: 100%; max-height: 100%; width: auto; height: auto; display: block; }

.content.view-embed { width: 100%; height: 100%; }
.content.view-embed embed { width: calc(100% - 10px); height: calc(100% - 10px); }
.content.view-media { display: flex; justify-content: center; align-items: center; width: 100%; }
.content.view-media audio { width: 100%; }
.content.view-media video { width: 100%; height: 100%; }

.content.view-iframe { display: flex; justify-content: center; align-items: center; width: 100%; }
.content.view-iframe iframe { width: 100%; height: 100%; border:none; }

.content.con-lst { display: flex; flex-direction: column; padding: 0 5px 0 5px; margin: 0; }
.content.con-lst .content-list { height: 100%; overflow-y: auto; }
.content.con-lst .item { display: flex; }
.content.con-lst .item:hover {background-color: #e4e9ee;}
.content.con-lst .item .cell { padding: 0; box-sizing: border-box; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;}
.content.con-lst .item .cell.file { flex: 1; text-align: left; }
.content.con-lst .item .cell.browser { flex: 0 0 16px; text-align: center; color: #1e3050;}
.content.con-lst .item .cell.size { flex: 0 0 110px; text-align: right;}
.content.con-lst .item .cell.ext { flex: 0 0 80px; text-align: center;}
.content.con-lst .item .cell.date { flex: 0 0 135px; text-align: right;}





.fa-images { color: #f4a261; margin-right: 5px; }
.fa-video { color: #f4a261; margin-right: 5px; }
.fa-volume-high { color: #f4a261; margin-right: 5px; }
.fa-ellipsis { color: #f4a261; margin-right: 5px; }
.fa-list { color: #f4a261;}
.fa-table-cells { color: #f4a261; }


.right .top .dir-up {display: inline-block; cursor:pointer; color: #1e3050;}
.right .top .dir-browser {display: inline-block; cursor:pointer; color: #1e3050;}
.right .top .cell.cur-dir {cursor: pointer; display: inline-block;}
.right .top .cell.cur-dir .dir {display: inline-block;}
.right .top .cell.cur-dir .dir-all {display: inline-block;}
.right .top .cell.cur-dir .dir-all .dir-part {display: inline-block; cursor: pointer;}
.right .top .cell.cur-dir .dir-all .dir-part:hover { background-color: #bad0e4;}


.ext-container { display: flex; justify-content: space-between; padding: 0 5px 0 5px;}
.ext-container .ext-sub { display: flex; }
.ext-container .ext-sub .ext { padding: 0 2px 0 2px; cursor: pointer;}
.ext-container .ext-sub .ext[class*="on"] i { color: #2a9d8f; }
.ext-container .ext-sub .ext i { color: #d4c5ba;}
.file-header-con { padding: 2px 5px 2px 5px; background-color: #f0f0f0; font-weight: bold;  }

.file-header { display: flex; padding: 0 5px 0 5px;}
.file-header .cell { padding: 0; box-sizing: border-box; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;}
.file-header .cell.file { flex: 1; text-align: left; }
.file-header .cell.browser { flex: 0 0 16px; text-align: center; color: #1e3050;}
.file-header .cell.size { flex: 0 0 110px; text-align: right;}
.file-header .cell.ext { flex: 0 0 80px; text-align: center;}
.file-header .cell.date { flex: 0 0 135px; text-align: right;}

.progress { position: relative; width: 40px; height: 40px; }
.progress-text { position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); font-size: 0.8em; font-weight: bold; }
.ring{ width: 100%; height: 100%; }
.ring .bg {stroke: #e6e6e6;}
.ring .color { stroke: #00aaff; transform: rotate(-90deg); transform-origin: 50% 50%; transition: stroke-dashoffset 0.5s ease;}

.slider-container { width: 100%; }
.slider { width: calc(100% - 10px); cursor: pointer; }

.title-path {padding: 0 5px 0 5px; }
.ordering.click {cursor:pointer}
.ordering.click:hover {background-color: #bad0e4;}

.ordering {display: inline-block;}
.ordering i { color: #a8a4db;}
.ordering[data-ordering="asc"] .asc { color: #036117;}
.ordering[data-ordering="asc"] .desc {display: none}
.ordering[data-ordering="asc"] .dash {display: none}
.ordering[data-ordering="desc"] .asc {display: none}
.ordering[data-ordering="desc"] .desc { color: #036117;}
.ordering[data-ordering="desc"] .dash {display: none}
.ordering[data-ordering="dash"] .asc {display: none}
.ordering[data-ordering="dash"] .desc {display: none}
.ordering[data-ordering="dash"] .dash {}

html.wait-cursor,
html.wait-cursor * { cursor: wait !important; }

